plugins {
    id "fabric-loom" version "1.6-SNAPSHOT"
    id "maven-publish"
    id "com.modrinth.minotaur" version "2.+"
}

version = project.mod_version + "+" + project.minecraft_version

repositories {
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://maven.terraformersmc.com/releases/" }
}

dependencies {
    // PreProcessing
    annotationProcessor "systems.manifold:manifold-preprocessor:2024.1.18"

    // Minecraft
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API
    modImplementation(fabricApi.module("fabric-resource-loader-v0", project.fabric_version))
    modImplementation(fabricApi.module("fabric-command-api-v2", project.fabric_version))
    modImplementation(fabricApi.module("fabric-lifecycle-events-v1", project.fabric_version))
    modImplementation(fabricApi.module("fabric-key-binding-api-v1", project.fabric_version))
    modImplementation(fabricApi.module("fabric-screen-api-v1", project.fabric_version))

    // ModMenu
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

    // Gson
    implementation "com.google.code.gson:gson:2.10.1"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand([
                "version"       : project.version,
                "loader_version": project.loader_version,
                "mc_version"    : project.minecraft_version,
                "java_version"  : project.java_version
        ])
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.release = rootProject.java_version as int

    //pre processor args
    options.compilerArgs += ["-Xplugin:Manifold"]
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE")
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")

    projectId = "$project.archives_base_name"
    versionName = "[$project.minecraft_version] CyanLib $project.mod_version"
    versionNumber = "$version"
    versionType = "release"

    uploadFile = remapJar
    additionalFiles = [remapSourcesJar]

    gameVersions = ["$project.minecraft_version"]
    loaders = ["fabric"]

    dependencies {
        required.version "fabric-api", "$project.fabric_version"
        required.version "modmenu", "$project.modmenu_version"
    }

    changelog = file("changelogs/latest.md").exists() ? file("changelogs/latest.md").getText() : "No changelog provided"
    syncBodyFrom = rootProject.file("README.md").text

    debugMode = true
}
tasks.modrinth.dependsOn(tasks.modrinthSyncBody)
